{"mappings":";;;;;;;;;;;;AAOO,MAAM,kDAA0B,CAAA,GAAA,wCAAW;;;QAChD,sEAAsE;aAC7D,OAAe;;AAC1B;;IADG,CAAA,GAAA,iCAAI;GAFM;AAAA;IAJZ,CAAA,GAAA,yCAAY,EAAE;QACb,MAAM;QACN,UAAU,CAAA,GAAA,gCAAG,CAAC,CAAC,aAAa,CAAC,CAAC,kCAAkC;IAClE;GACa;AAKb,8BAA8B;AAC9B,MAAM,uCAAiB,CAAA,GAAA,gCAAG,CAAa,CAAC;;AAExC,CAAC;AAED,wCAAwC;AACxC,MAAM,qCAAe,CAAA,GAAA,+BAAE,CAAC,CAAC;;;;AAIzB,CAAC;AAQM,MAAM,kDAAmB,CAAA,GAAA,wCAAW;IAIvC,oBAAoB;QAChB,KAAK,CAAC;QACN,gCAAgC;QAChC,IAAI,CAAC,WAAW;QAChB,kCAAkC;QAClC,OAAO,gBAAgB,CAAC,cAAc,IAAM,IAAI,CAAC,WAAW;IAChE;IAEA,gEAAgE;IAChE,cAAc;QACV,IAAI,CAAC,YAAY,GAAG,OAAO,QAAQ,CAAC,IAAI,IAAI;QAC5C,IAAI,CAAC,qBAAqB;IAC9B;IAEA,qEAAqE;IACrE,wBAAwB;QACpB,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ;QAEzC,SAAS,OAAO,CAAC,CAAC;YACd,6DAA6D;YAC7D,IAAI,CAAE,CAAA,iBAAiB,yCAAgB,GAAI;gBACvC,QAAQ,IAAI,CAAC,CAAC,qCAAqC,CAAC,EAAE;gBACtD;YACJ;YAEA,wEAAwE;YACxE,MAAM,KAAK,CAAC,OAAO,GAAG,MAAM,IAAI,KAAK,IAAI,CAAC,YAAY,GAAG,UAAU;QACvE;IACJ;;;aA9BS,eAAe,GAAI,oBAAoB;;;AA+BpD;;IA/BK,CAAA,GAAA,iCAAI;GAFI;AAAA;IALZ,CAAA,GAAA,yCAAY,EAAE;QACX,MAAM;QACN,UAAU;QACV,QAAQ;IACZ;GACa","sources":["src/index.ts"],"sourcesContent":["import { WebComponent, html, css, customElement, state } from \"@lithium-framework/core\";\n\n// Chaque élément correspond à une vue spécifique, identifiable via l'attribut `path`.\n@customElement({\n  name: 'hash-router-element',\n  template: html`<slot></slot>` // Affiche son contenu via un slot\n})\nexport class HashRouterElement extends WebComponent {\n  // Attribut 'path' qui spécifie à quelle route cet élément est associé\n  @state() path: string = \"\";\n}\n\n// Template pour `hash-router`\nconst routerTemplate = html<HashRouter>`\n    <slot></slot>\n`;\n\n// Styles pour `hash-router` (optionnel)\nconst routerStyles = css`\n    :host {\n        display: block;\n    }\n`;\n\n// Définition de `hash-router`\n@customElement({\n    name: 'hash-router',\n    template: routerTemplate,\n    styles: routerStyles\n})\nexport class HashRouter extends WebComponent {\n\n    @state() currentRoute = \"\"; // La route actuelle\n\n    connectedCallback() {\n        super.connectedCallback();\n        // Initialiser la route courante\n        this.updateRoute();\n        // Écouter les changements de hash\n        window.addEventListener('hashchange', () => this.updateRoute());\n    }\n\n    // Fonction qui met à jour la route en fonction du hash de l'URL\n    updateRoute() {\n        this.currentRoute = window.location.hash || \"#\";\n        this.updateVisibleElements();\n    }\n\n    // Fonction qui gère l'affichage des éléments en fonction de la route\n    updateVisibleElements() {\n        const children = Array.from(this.children) as HTMLElement[];\n\n        children.forEach((child: any) => {\n            // Rejeter tout enfant qui n'est pas un `hash-router-element`\n            if (!(child instanceof HashRouterElement)) {\n                console.warn(`Element non valide dans hash-router: `, child);\n                return;\n            }\n\n            // Afficher ou masquer les `hash-router-element` en fonction de la route\n            child.style.display = child.path === this.currentRoute ? 'block' : 'none';\n        });\n    }\n}\n\ndeclare global {\n  interface NamedTagMap {\n      'hash-router': HashRouter;\n      'hash-router-element': HashRouterElement;\n  }\n}"],"names":[],"version":3,"file":"index.js.map"}