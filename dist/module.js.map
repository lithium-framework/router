{"mappings":";;;;;AAQO,MAAM,kDAA0B,CAAA,GAAA,mBAAW;IAIhD,6EAA6E;IAC7E,WAAW,QAAa,EAAE;QACxB,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA,kDAAkD;IAClD,WAAW;QACT,oDAAoD;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,6BAA6B;QAClD,IAAI,IAAI,CAAC,OAAO,EACd,CAAA,GAAA,aAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,oCAAoC;QAElE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,SAAU,oBAAoB;IACrD;IAEA,oDAAoD;IACpD,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,mBAAmB;IAClD;;;aArBQ,OAAe;aACd,UAAe,KAAM,8BAA8B;;;AAqB9D;;IAtBG,CAAA,GAAA,WAAG;GADO;;IAEV,CAAA,GAAA,YAAI;GAFM;AAAA;IAJZ,CAAA,GAAA,oBAAY,EAAE;QACb,MAAM;QACN,UAAU,CAAA,GAAA,WAAG,CAAC,CAAC,aAAa,CAAC,CAAC,6BAA6B;IAC7D;GACa;AAyBb,8BAA8B;AAC9B,MAAM,uCAAiB,CAAA,GAAA,WAAG,CAAa,CAAC;;AAExC,CAAC;AAED,wCAAwC;AACxC,MAAM,qCAAe,CAAA,GAAA,UAAE,CAAC,CAAC;;;;AAIzB,CAAC;AAQM,MAAM,kDAAmB,CAAA,GAAA,mBAAW;IAIvC,oBAAoB;QAChB,KAAK,CAAC;QACN,IAAI,CAAC,WAAW;QAChB,OAAO,gBAAgB,CAAC,cAAc,IAAM,IAAI,CAAC,WAAW;IAChE;IAEA,gEAAgE;IAChE,cAAc;QACV,IAAI,CAAC,YAAY,GAAG,OAAO,QAAQ,CAAC,IAAI,IAAI;QAC5C,IAAI,CAAC,qBAAqB;IAC9B;IAEA,sEAAsE;IACtE,wBAAwB;QACpB,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ;QAEzC,SAAS,OAAO,CAAC,CAAC;YACd,4CAA4C;YAC5C,IAAI,iBAAiB;gBACjB,sDAAsD;gBACtD,IAAI,MAAM,YAAY,CAAC,YAAY,IAAI,CAAC,YAAY,EAChD,MAAM,QAAQ;qBAEd,MAAM,UAAU;;QAG5B;IACJ;;;aA7BS,eAAe,GAAI,oBAAoB;;;AA8BpD;;IA9BK,CAAA,GAAA,YAAI;GAFI;AAAA;IALZ,CAAA,GAAA,oBAAY,EAAE;QACX,MAAM;QACN,UAAU;QACV,QAAQ;IACZ;GACa","sources":["src/index.ts"],"sourcesContent":["import { WebComponent, html, css, customElement, attr , state , render } from \"@lithium-framework/core\";\n\n// Chaque élément correspond à une vue spécifique, identifiable via l'attribut `path`.\n// Les callbacks sont appelés lorsque la route est activée.\n@customElement({\n  name: 'hash-router-element',\n  template: html`<slot></slot>` // Contenu via slot dynamique\n})\nexport class HashRouterElement extends WebComponent {\n  @attr() path: string = \"\";\n  @state() element: any = null; // Stocke le modèle (template)\n\n  // Méthode pour définir un template à rendre lors de l'activation de la route\n  setElement(template: any) {\n    this.element = template;\n  }\n\n  // Méthode appelée lorsque la route devient active\n  activate() {\n    // Utiliser Lithium pour rendre le contenu dynamique\n    this.innerHTML = \"\"; // Vider le contenu précédent\n    if (this.element) {\n      render(this.element, this); // Rendre le template dans l'élément\n    }\n    this.style.display = 'block';  // Affiche l'élément\n  }\n\n  // Méthode appelée lorsque la route devient inactive\n  deactivate() {\n    this.style.display = 'none'; // Masque l'élément\n  }\n}\n\n// Template pour `hash-router`\nconst routerTemplate = html<HashRouter>`\n    <slot></slot>\n`;\n\n// Styles pour `hash-router` (optionnel)\nconst routerStyles = css`\n    :host {\n        display: block;\n    }\n`;\n\n// Définition de `hash-router`\n@customElement({\n    name: 'hash-router',\n    template: routerTemplate,\n    styles: routerStyles\n})\nexport class HashRouter extends WebComponent {\n\n    @state() currentRoute = \"\"; // La route actuelle\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.updateRoute();\n        window.addEventListener('hashchange', () => this.updateRoute());\n    }\n\n    // Fonction qui met à jour la route en fonction du hash de l'URL\n    updateRoute() {\n        this.currentRoute = window.location.hash || \"#\";\n        this.updateVisibleElements();\n    }\n\n    // Fonction qui gère l'affichage et les callbacks des éléments enfants\n    updateVisibleElements() {\n        const children = Array.from(this.children) as HashRouterElement[];\n\n        children.forEach((child) => {\n            // Si l'élément est un `hash-router-element`\n            if (child instanceof HashRouterElement) {\n                // Activer l'élément si son path correspond à la route\n                if (child.getAttribute(\"path\") === this.currentRoute) {\n                    child.activate();\n                } else {\n                    child.deactivate();\n                }\n            }\n        });\n    }\n}\n\ndeclare global {\n  interface NamedTagMap {\n      'hash-router': HashRouter;\n      'hash-router-element': HashRouterElement;\n  }\n}"],"names":[],"version":3,"file":"module.js.map"}